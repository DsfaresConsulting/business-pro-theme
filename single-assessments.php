<?php
/**
 * Genesis Framework.
 *
 * WARNING: This file is part of the core Genesis Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package Genesis\Templates
 * @author  StudioPress
 * @license GPL-2.0-or-later
 * @link    https://my.studiopress.com/themes/genesis/
 */

// This file handles single entries, but only exists for the sake of child theme forward compatibility.

remove_action( 'genesis_entry_header', 'genesis_post_info', 12 );
// Removes breadcrumbs.
remove_action( 'genesis_before_loop', 'genesis_do_breadcrumbs' );

function assessment_intro() {
	echo '<div class="name-input">' 
		. '<label for="student_name">Student Name: <span>*</span><br><input type="text" name="student_name" value="your name"></label>'
		. '<label for="student_id">Student ID: <span>*</span><br><input type="text" name="student_id" value="your id number"></label>'
		. '</div>';
	echo '<div id="assessment-intro">' . get_field('brief_intro') . '</div>';
}

function assessment_sections() {
	$section_count = 0;
	if (have_rows('sections')) {
		$section_count ++;
        echo '<div class="assessment">';
		while(have_rows('sections')) {
		echo '<section class="assessment-section">';
			the_row();
			$reference = get_sub_field('reference');
			$reference_id = $reference->ID;
			$reference_images = get_field('reference_images', $reference_id);
			$size = 'large';
			echo '<div class="reference">';
				echo '<figure class="wp-block-gallery">';
				echo '<ul class="blocks-gallery-grid reference_images">';
				foreach( $reference_images as $image_id ):
					echo '<li class="blocks-gallery-item">';
						// print_r($image_id);
						// echo esc_url_raw($image_id['url']);
						$img_url = esc_url_raw($image_id['url']);
						echo '<figure>';
							echo '<a href="' . $img_url . '" data-featherlight="image">' . '<img loading="lazy" src="' . $img_url . '"/>' . '</a>';
						echo '</figure>';
					echo '</li>';
				endforeach;
				echo '</ul>';
				echo '</figure>';
			echo '</div>';
			echo '<div class="questions">';
				$question_num = 0;
			
				echo '<div class="pre-reference-text">' . get_sub_field('pre_reference_text') . '</div>';
// 				$default_questions = get_field('default_questions', $reference_id);
			
// 				if ($default_questions) {
// 					echo '<div class="default-questions">';
// 					foreach($default_questions as $question ) {
// 						$question_num ++;
// 						// setup_postdata($question);
// 						$question_id = $question->ID;
// 						echo '<div class="question" id="question_' . $question_id . '">';
// 						// print_r($question);
// 						$question_text = $question->post_content;
// 						echo '<div class="question-num">' . $question_num . '.' . '</div>';
// 						echo '<div class="question-wrapper">';
// 						echo '<div class="question-text">' . $question_text . '</div>';
// 							$possible_answers = ['a','b','c','d','e'];
// 							$correct_answer = '';
// 							$count = 0;
// 							echo '<div class="possible-answers">';
// 							while (have_rows('possible_answers', $question_id)) {
// 								the_row();
// 								$answer_id = $question_id . '_' . $possible_answers[$count];
// 								echo '<div class="radio-button-wrapper">';
// 								echo '<input type="radio" name="question_' . $question_id . '" id="' . $answer_id . '" value="' . $answer_id . '" class="possible-answer">';
// 								echo '<label for="' . $answer_id . '">' . get_sub_field('answer_text') . '</label>';
// 								echo '</div>';
// 								if (get_sub_field('correct_answer')) {
// 									$correct_answer = $answer_id;
// 								}
// 								$count ++;
// 	// 							echo '<br/>';
// 							}
// 							echo '</div>';
// 						echo '</div>';
// 						// echo 'correct - ' . $correct_answer;
// 						echo '</div>';
// 						// wp_reset_postdata();
// 					}
// 					echo '</div>';
// 				}
				
				if(have_rows('all_questions')){
					echo '<div class="default-questions additional_questions">';
					while(have_rows('all_questions')) {
						$question_num ++;
						the_row();
						$count = 0;
						// echo '<div class="debug">hello question</div>';
						// print_r($question);
						$question_id = get_sub_field('question_id');
						if (!$question_id) {
							$question_id = $count;
						}
// 						$question_id = 's_' . $section_count . '_' . $question_id;
						$question_text = get_sub_field('question_text');
						echo '<div class="question" id="question_' . $question_id . '">';
						// print_r($question);
						echo '<div class="question-num">' . $question_num . '.' . '</div>';
						echo '<div class="question-wrapper">';
							echo '<div class="question-text">' . $question_text . '</div>';
							$possible_answers = ['a','b','c','d','e'];
							$correct_answer = '';
							echo '<div class="possible-answers">';
							while (have_rows('possible_answers')) {
								the_row();
								$answer_id = $question_id . '_' . $possible_answers[$count];
								
								echo '<div class="radio-button-wrapper">';
								echo '<input type="radio" name="question_' . $question_id . '" id="' . $answer_id . '" value="' . $answer_id . '" class="possible-answer">';
								echo '<label for="' . $answer_id . '">' . get_sub_field('answer_text') . '</label>';
								echo '</div>';
								if (get_sub_field('correct_answer')) {
									$correct_answer = $answer_id;
								}
								$count ++;
							}
							echo '</div>';
							// echo 'correct - ' . $correct_answer;
							echo '</div>';
						echo '</div>';
					}
					echo '</div>';
				}
			echo '</div>';
		echo '</section>';
		}
    echo'</div>';
	}
}

function assessment_footer() {
	echo '<div class="submit-button"><input name="submit" type="submit" value="Submit"></div>';
}

function assessment_wrapper() {
	if($_POST && $_POST['submit']) {
// 		print_r($_POST);
		submit_response();
		$student_name = $_POST["student_name"];
		echo '<p>' . $student_name . ', your answers have been submitted to your teacher.</p>';
	} else { 
		$assessment_id = get_the_ID();
		$student_responses = get_post_meta($assessment_id, 'student_responses', false);
		echo '<div class="responses">';
// 			print_r($student_responses);
		echo '</div>';
		echo '<div class="this-assessment">';
			echo '<form id="testform" action="" method="POST">';
				// echo '<input type="hidden" name="action" value="submit_response">';
				// echo '<div class="questions">';
				assessment_intro();
				assessment_sections();
				// echo '</div>';
				assessment_footer();
			echo '</form>';
		echo '</div>';
	}
}


function submit_response() {
	$assessment_id = get_the_id();

	$student_name = $_POST["student_name"];
    $student_ID = $_POST["student_id"];
	
	$answers = array();
    $row_count = 0;

	if (have_rows('sections')) {
		$sections = array();
		$section_count = 0;
		$question_num = 0;
			$questions = array();
		while(have_rows('sections')) {
			the_row();
			$section_count ++;
			$section_name = $question_num + 1;
			$section = ['sectionNum' => $section_count];
			$reference = get_sub_field('reference');
			$reference_id = $reference->ID;
			
// 			$default_questions = get_field('default_questions', $reference_id);
// 			if ($default_questions) {
// 				foreach($default_questions as $question ) {
// 					$question_num ++;

// 					$aquestion = ['questionNum' => $question_num];
// 					$question_id = $question->ID;
// 					$aquestion['id'] = $question->ID;
// 					$aquestion['text'] = $question->post_content;

// 					while (have_rows('possible_answers', $question_id)) {
// 						the_row();
// 						if (get_sub_field('correct_answer')) {
// 							$correct_answer = get_sub_field('answer_text');
// 							$aquestion['correct_answer'] = $correct_answer;
// 						}
// 					}
// 					array_push($questions, $aquestion);
// 				}
// 			}
			if(have_rows('all_questions')){
				while(have_rows('all_questions')) {
					the_row();

					$question_num ++;

					$aquestion = ['questionNum' => $question_num];

					$question_id = get_sub_field('question_id');
					if (!$question_id) {
						$question_id = $count;
					}

// 					$question_id = 's_' . $section_count . '_' . $question_id;
					$question_text = get_sub_field('question_text');

					$aquestion['id'] = $question_id;
					$aquestion['text'] = $question_text;

					while (have_rows('possible_answers')) {
						the_row();
						if (get_sub_field('correct_answer')) {
							$correct_answer = get_sub_field('answer_text');
							$aquestion['correct_answer'] = $correct_answer;
						}
					}
					array_push($questions, $aquestion);
				}
			}
			
			$section_name .= '-' . $question_num . ' ' . $reference->title;
			
// 			$section['name'] = $section_name;
// 			$section['questions'] = $questions;
			
// 			array_push($sections, $section);
		}
	}

	
	foreach ($questions as $question) {
		$qid = 'question_' . $question['id'];
		$q_name = 'Question_' . $question['questionNum']; // . ' - ' . $question['id'];
		$chosen_answer = $_POST[$qid];
		if ($chosen_answer ) {
			$question['chosen_answer'] = $chosen_answer;
			$answer = array(
				'question_id' => $qid,
				'question_name' => $q_name,
				'chosen_answer' => $chosen_answer
			);
			array_push($answers, $answer);
		} else {
			$question['chosen_answer'] = '';
			$answer = array(
				'question_id' => $qid,
				'question_name' => $q_name,
				'chosen_answer' => ''
			);
			array_push($answers, $answer);
		}
	}
		
//     foreach($_POST as $key => $value)
//     {
//         if (strstr($key, 'question_'))
//         {
//             $row_count ++;
//             $answer = array(
//                 'question_id' => $key,
//                 'chosen_answer' => $value
//             );
			
			

//             array_push($answers, $answer);
//         }
//     }
	
// 	$responses = get_field('responses');
// 	$has_responses = 'boop';
	
// 	if ($responses) {
// 		$has_responses = 'true';
// 	} else {
// 		$has_responses = 'false';
// 	}
	
// 	$student['answers'] = $answers;
	
// 	$student_responses = get_post_meta($assessment_id, 'student_responses', false);
// 	if ($student_responses) {
// 		array_push($student_responses, $student);
// 		update_post_meta( $assessment_id, 'student_responses', $student_responses );
// 	} else {
// 		$student_responses = array($student);
// 		add_post_meta( $assessment_id, 'student_responses', $student_responses);
// 	}
	
	$student = array(
		'student_name'   => $student_name,
		'student_id'  => $student_ID,
		'answers' => $answers
	);
 
	$can_response = add_row('field_5f3410d6cf267', $student, $assessment_id); //responses
}

// add_action('genesis_entry_content', 'assessment_intro');
add_action('genesis_entry_content', 'assessment_wrapper');

genesis();
